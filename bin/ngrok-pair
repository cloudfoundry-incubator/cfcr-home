#!/bin/sh

set -eu
set -o pipefail

command="$(basename "$0")"

# Make sure dependencies are installed
[ ! "$(command -v ngrok)" ] && echo "ngrok not found (https://ngrok.com/download)" && exit 1
[ ! "$(command -v gh-auth)" ] && echo "gh-auth not found (gem install github-auth)" && exit 1
[ ! "$(command -v tmux)" ] && echo "tmux not found" && exit 1

help(){
  echo "Usage: $command <subcommand> [options]"
  echo
  echo "Subcommands:"
  echo "    add  Add a github user"
  echo "    rm   Remove a github user"
  echo "    ls   List github users"
  echo "    up   Open shared tmux session"
  echo "    ssh  Start a reverse tunnel for pair sharing"
  echo "         See: https://ngrok.com"
}

add(){
  gh-auth add --users "$@" --command="$(command -v tmux) -u attach -t pairing"
}

rm(){
  gh-auth remove --users "$@"
}

ls(){
  gh-auth list
}

up(){
  for user in "$@";do
    add "$user"
  done

  tmux rename-session pairing
  tmux send-keys " ngrok tcp -region eu 22" C-m
  tmux split-window
  tmux send-keys " while ! $command ssh ; do sleep 1s ; done" C-m
}

ssh(){
  host="0.tcp.eu.ngrok.io"
  user=pivotal
  port=$(curl -s http://localhost:4040/api/tunnels|jq -r '.tunnels[0].public_url'| cut -d : -f3)
  ssh_command="ssh -p $port $user@$host"
  echo "$ssh_command"
  echo "$ssh_command" | pbcopy
}

subcommand="${1:-}"
case $subcommand in
  '' | '-h' | '--help')
    help ;;
  *)
    shift
    "${subcommand}" "$@"
    ;;
esac
